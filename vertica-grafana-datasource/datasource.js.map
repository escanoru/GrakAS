{"version":3,"sources":["../frontend/datasource.js"],"names":["_","ResponseParser","VerticaDatasource","instanceSettings","backendSrv","$q","templateSrv","timeSrv","q","name","id","responseParser","options","queries","targets","map","target","refId","datasourceId","rawSql","replace","scopedVars","interpolateVariable","format","length","when","data","datasourceRequest","url","method","from","range","valueOf","toString","to","then","processQueryResult","query","optionalOptions","variable","interpolatedQuery","timeRange","parseMetricFindQueryResult","value","multi","includeAll","quotedValues","v","join","metricFindQuery","status","message","res","text","catch","err"],"mappings":"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","file":"datasource.js","sourcesContent":["// Copyright (c) 2019 Micro Focus or one of its affiliates.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport _ from 'lodash';\nimport ResponseParser from './response_parser';\n\nexport default class VerticaDatasource {\n\n  constructor(instanceSettings, backendSrv, $q, templateSrv, timeSrv) {\n    this.backendSrv = backendSrv;\n    this.q = $q;\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.responseParser = new ResponseParser(this.q);\n    this.templateSrv = templateSrv;\n    this.timeSrv = timeSrv;\n  }\n\n  query(options) {\n\n    const queries = options.targets.map((target) => {\n      return {\n        refId: target.refId,\n        datasourceId: this.id,\n        rawSql: this.templateSrv.replace(target.rawSql, options.scopedVars, this.interpolateVariable),\n        format: target.format,\n      };\n    });\n\n    if (queries.length === 0) {\n      return this.$q.when({ data: [] });\n    }\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          from: options.range.from.valueOf().toString(),\n          to: options.range.to.valueOf().toString(),\n          queries: queries,\n        },\n      })\n      .then(this.responseParser.processQueryResult);\n  }\n\n  metricFindQuery(query, optionalOptions) {\n    let refId = 'tempvar';\n    if (optionalOptions && optionalOptions.variable && optionalOptions.variable.name) {\n      refId = optionalOptions.variable.name;\n    }\n\n    const interpolatedQuery = {\n      refId: refId,\n      datasourceId: this.id,\n      rawSql: this.templateSrv.replace(query, {}, this.interpolateVariable),\n      format: 'table',\n    };\n\n    const range = this.timeSrv.timeRange();\n    const data = {\n      queries: [interpolatedQuery],\n      from: range.from.valueOf().toString(),\n      to: range.to.valueOf().toString(),\n    };\n\n    return this.backendSrv\n      .datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: data,\n      })\n      .then(data => this.responseParser.parseMetricFindQueryResult(refId, data));\n  }\n\n  interpolateVariable(value, variable) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value.replace(/'/g, `''`) + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    const quotedValues = _.map(value, v => {\n      return \"'\" + v.replace(/'/g, `''`) + \"'\";\n    });\n    return quotedValues.join(',');\n  }\n\n  testDatasource() {\n    return this.metricFindQuery('SELECT VERSION()', {})\n      .then(res => {\n        return { status: 'success', message: 'Connection to ' + res[0].text + ' successful!' };\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          return { status: 'error', message: err.data.message };\n        } else {\n          return { status: 'error', message: err.status };\n        }\n      });\n  }\n}\n"]}